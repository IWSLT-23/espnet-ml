elayers: 18
eunits: 1024
# attention related
adim: 256
aheads: 4

# hybrid CTC/attention
mtlalpha: 1.0

# label smoothing
lsm-weight: 0.1

# minibatch related
batch-size: 32
maxlen-in: 512  # if input length  > maxlen-in, batchsize is automatically reduced
maxlen-out: 150 # if output length > maxlen-out, batchsize is automatically reduced

# optimization related
sortagrad: 0 # Feed samples from shortest to longest ; -1: enabled for all epochs, 0: disabled, other: enabled for 'other' epochs
opt: noam
accum-grad: 8
grad-clip: 5
patience: 0
epochs: 50 # 70 epochs give reasonable results
dropout-rate: 0.1

# transformer specific setting
backend: pytorch
model-module: "espnet.nets.pytorch_backend.e2e_asr_conformer_hier:E2E"
transformer-input-layer: conv2d
transformer-lr: 5.0
transformer-warmup-steps: 25000
transformer-attn-dropout-rate: 0.0
transformer-length-normalized-loss: false
transformer-init: pytorch

# conformer specific setting
transformer-encoder-pos-enc-layer-type: rel_pos
transformer-encoder-selfattn-layer-type: rel_selfattn
transformer-encoder-activation-type: swish
macaron-style: true
use-cnn-module: true
cnn-module-kernel: 15
rel-pos-type: latest

# Report CER & WER
report-cer: true # important for reporting cer_ctc
report-wer: true

# for visualization
num-save-attention: 0
num-save-ctc: 0 

# intermediate CTC + stochastic depth
intermediate-ctc-layer: '6,12'
intermediate-ctc-weight: 0.66
stochastic-depth-rate: 0.0
self-conditioning: true

enc-init: exp/train_pytorch_hierctc_conformer_6only_specaug_aidacchier256_nbpe1000/results/model.val5.avg.best
enc-init-mods: "encoder.encoders.0.,encoder.encoders.1.,encoder.encoders.2.,encoder.encoders.3.,encoder.encoders.4.,encoder.encoders.5.,\
                encoder.encoders.6.,encoder.encoders.7.,encoder.encoders.8.,encoder.encoders.9.,encoder.encoders.10.,encoder.encoders.11.,inter_ctc"
rename-keys: "ctc.ctc_lo.weight:inter_ctc.1.ctc_lo.weight,ctc.ctc_lo.bias:inter_ctc.1.ctc_lo.bias"
